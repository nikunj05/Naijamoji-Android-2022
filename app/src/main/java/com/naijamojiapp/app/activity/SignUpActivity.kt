package com.naijamojiapp.app.activityimport android.app.DatePickerDialogimport android.content.Intentimport android.net.Uriimport android.os.Bundleimport android.text.TextUtilsimport android.util.Logimport android.view.Viewimport android.view.Windowimport android.view.WindowManagerimport android.widget.*import androidx.appcompat.app.AppCompatActivityimport com.androidnetworking.AndroidNetworkingimport com.androidnetworking.common.Priorityimport com.androidnetworking.error.ANErrorimport com.androidnetworking.interfaces.ParsedRequestListenerimport com.naijamojiapp.Rimport com.naijamojiapp.app.customview.CustomDialogimport com.naijamojiapp.app.customview.CustomProgressDialogimport com.naijamojiapp.app.response.CheckAlreadyLoginOrNotResponseimport com.naijamojiapp.app.response.newResponse.CheckEmailExistOrNotResponseimport com.naijamojiapp.app.utils.CheckConnectionimport com.naijamojiapp.app.utils.Constantsimport com.naijamojiapp.app.utils.Utilityimport java.util.*class SignUpActivity : AppCompatActivity(), View.OnClickListener {    var rlBack: RelativeLayout? = null    var edtFirstName: EditText? = null    var edtLastName: EditText? = null    var edtEmail: EditText? = null    var edtPassword: EditText? = null    var llSignup: LinearLayout? = null    var btnSignup: Button? = null    var tvSignIn: TextView? = null    var rlDOB: RelativeLayout? = null    var tvDob: TextView? = null    var tvTerms: TextView? = null    var mDOB: String? = ""    //var spSelectGender: Spinner? = null    private var genderTypeArrayList: ArrayList<String>? = null    private var strGenderType = ""    private var strDateofbirth = ""    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        Utility.instance!!.setTopBar(this,window)        setContentView(R.layout.activity_signup)        init()    }    private fun init() {        rlBack = findViewById(R.id.rl_back)        rlBack!!.setOnClickListener(this)        edtFirstName = findViewById(R.id.edt_first_name)        edtLastName = findViewById(R.id.edt_last_name)        edtEmail = findViewById(R.id.edt_email)        edtPassword = findViewById(R.id.edt_password)        llSignup = findViewById(R.id.linear_signup)        llSignup!!.setOnClickListener(this)        btnSignup = findViewById(R.id.btn_signup)        btnSignup!!.setOnClickListener(this)        tvSignIn = findViewById(R.id.tv_sign_in)        tvSignIn!!.setOnClickListener(this)        tvSignIn!!.text = resources.getString(R.string.already_have_account)        rlDOB = findViewById(R.id.rlDOB)        rlDOB!!.setOnClickListener(this)        tvDob = findViewById(R.id.tvDob)        tvDob!!.setOnClickListener(this)        tvTerms = findViewById(R.id.tvTerms)        tvTerms!!.setOnClickListener(this)        /*spSelectGender = findViewById(R.id.sp_select_gender)        setSpData()        spSelectGender!!.setOnItemSelectedListener(object : AdapterView.OnItemSelectedListener {            override fun onItemSelected(parent: AdapterView<*>, view: View, position: Int, id: Long) {                if (!TextUtils.isEmpty(genderTypeArrayList!!.get(position))) {                    if (genderTypeArrayList!!.get(position) == getString(R.string.male)) {                        strGenderType = "M"                    } else if (genderTypeArrayList!!.get(position) == getString(R.string.female)) {                        strGenderType = "F"                    } else {                        strGenderType = ""                    }                } else {                    strGenderType = ""                }            }            override fun onNothingSelected(parent: AdapterView<*>) {            }        })*/    }    override fun onClick(view: View?) {        when (view!!.id) {            R.id.rl_back -> {                finish()            }            R.id.btn_signup -> {                //       Crashlytics.getInstance().crash() // Force a crash                if (CheckConnection.getInstance(this).isConnectingToInternet()) {                    if (isValid()) {                        checkUserAlredyExistOrNot()                    }                } else {                    CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.check_internet_connection))                }            }            R.id.tv_sign_in -> {                //  CustomDialog.instance!!.showalert(this, resources.getString(R.string.check_internet_connection))                finish()            }            R.id.rlDOB -> {                val calendar = Calendar.getInstance()                val year = calendar.get(Calendar.YEAR)                val month = calendar.get(Calendar.MONTH)                val day = calendar.get(Calendar.DAY_OF_MONTH)                val dpd = DatePickerDialog(this, DatePickerDialog.OnDateSetListener { view, year, monthOfYear, dayOfMonth ->                    // Display Selected date in textbox                    if(onDateSet(view, year, monthOfYear, dayOfMonth)!!){                        CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.age_validation))                    }else{                        mDOB = Utility.instance!!.mDatePickerDateformatChange(dayOfMonth.toString() + "/" + (monthOfYear + 1) + "/" + year)                        tvDob!!.text = Utility.instance!!.simpleDateConvertDob(mDOB!!)                    }                }, year, month, day)                calendar.timeInMillis = System.currentTimeMillis() - 1000                dpd.datePicker.maxDate = calendar.timeInMillis                dpd.show()            }            R.id.tvDob -> {                val calendar = Calendar.getInstance()                val year = calendar.get(Calendar.YEAR)                val month = calendar.get(Calendar.MONTH)                val day = calendar.get(Calendar.DAY_OF_MONTH)                val dpd = DatePickerDialog(this, DatePickerDialog.OnDateSetListener { view, year, monthOfYear, dayOfMonth ->                    // Display Selected date in textbox                    if(onDateSet(view, year, monthOfYear, dayOfMonth)!!){                        CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.age_validation))                    }else{                        mDOB = Utility.instance!!.mDatePickerDateformatChange(dayOfMonth.toString() + "/" + (monthOfYear + 1) + "/" + year)                        tvDob!!.text = Utility.instance!!.simpleDateConvertDob(mDOB!!)                    }                }, year, month, day)                calendar.timeInMillis = System.currentTimeMillis() - 1000                dpd.datePicker.maxDate = calendar.timeInMillis                dpd.show()            }            R.id.tvTerms -> {                var browserIntent = Intent(Intent.ACTION_VIEW, Uri.parse("http://naijamoji.com/policy/"));                startActivity(browserIntent);            }        }    }    private fun checkUserAlredyExistOrNot() {        val progressDialog = CustomProgressDialog(this@SignUpActivity, R.style.progress_dialog_text_style)        progressDialog.show()        AndroidNetworking.post(Constants.INSTANCE.URLLOCAL + Constants.INSTANCE.strWS_check_email_exist)                .addBodyParameter("email_id", edtEmail!!.text.toString())                .setPriority(Priority.MEDIUM)                .build()                .getAsObject(CheckEmailExistOrNotResponse::class.java, object : ParsedRequestListener<CheckEmailExistOrNotResponse> {                    override fun onResponse(response: CheckEmailExistOrNotResponse?) {                        Log.i("response", response.toString())                        if (progressDialog.isShowing())                            progressDialog.dismiss()                        var mSuccess = false                        if (response != null)                            if (response.status!!.success == (Constants.INSTANCE.one)) {                                mSuccess = true                            }                        if (mSuccess) {                            if(response!!.status!!.is_email_exist.equals("0")){                                //New MailId                                val intent = Intent(this@SignUpActivity, SelectGenderActivity::class.java)                                intent.putExtra("fname", edtFirstName!!.text.toString())                                intent.putExtra("lname", edtLastName!!.text.toString())                                intent.putExtra("email", edtEmail!!.text.toString())                                intent.putExtra("password", edtPassword!!.text.toString())                                intent.putExtra("birthdate", mDOB)                                intent.putExtra("isSocial", "0")                                startActivity(intent)                            }else{                                //MailID Alredy Exist                                CustomDialog.instance!!.showalert(this@SignUpActivity, response!!.status!!.message!!)                            }                        } else {                            try {                                CustomDialog.instance!!.showalert(this@SignUpActivity, response!!.status!!.message!!)                            } catch (e: Exception) {                                e.printStackTrace()                                CustomDialog.instance!!.showalert(this@SignUpActivity, response!!.status!!.message!!)                            }                        }                    }                    override fun onError(anError: ANError) {                        Log.i("error", anError.toString())                        if (progressDialog != null && progressDialog.isShowing())                            progressDialog.dismiss()                    }                })    }    fun onDateSet(view: DatePicker?, year: Int, month: Int, day: Int): Boolean? {        val userAge: Calendar = GregorianCalendar(year, month, day)        val minAdultAge: Calendar = GregorianCalendar()        minAdultAge.add(Calendar.YEAR, -18)        if (minAdultAge.before(userAge)) {            return true        }        return false    }    /*private fun setSpData() {        genderTypeArrayList = ArrayList()        genderTypeArrayList!!.add(resources.getString(R.string.male))        genderTypeArrayList!!.add(resources.getString(R.string.female))        val genderTypeAdapter = object : ArrayAdapter<String>(this, R.layout.custom_spinner_layout, genderTypeArrayList!!) {            override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {                val view = super.getView(position, convertView, parent)                val text = view.findViewById<View>(android.R.id.text1) as TextView                text.setTextColor(resources.getColor(R.color.grey))                text.textSize = 14f                return view            }        }        spSelectGender!!.setAdapter(genderTypeAdapter);    }*/    private fun isValid(): Boolean {        if (TextUtils.isEmpty(edtFirstName!!.getText().toString())) {            CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.please_enter_fname))            return false        } else {            edtFirstName!!.setError(null)        }        if (TextUtils.isEmpty(edtLastName!!.getText().toString())) {            CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.please_enter_lname))            return false        } else {            edtLastName!!.setError(null)        }        if (TextUtils.isEmpty(edtEmail!!.getText().toString())) {            CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.please_enter_email))            return false        } else {            edtEmail!!.setError(null)        }        if (!Constants.INSTANCE.isValidEmail(edtEmail!!.getText().toString())) {            CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.please_enter_valid_email))            return false        } else {            edtEmail!!.setError(null)        }        if (TextUtils.isEmpty(mDOB)) {            CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.please_select_birthdate))            return false        }        if (TextUtils.isEmpty(edtPassword!!.getText().toString())) {            CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.please_enter_password))            return false        }        if (edtPassword!!.getText().toString().length < 8)  {            CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.please_enter_valid_password))            return false        }        if (!Utility.instance!!.isValidPassword(edtPassword!!.getText().toString())) {            CustomDialog.instance!!.showalert(this@SignUpActivity, resources.getString(R.string.please_enter_valid_password))            return false        }        return true    }}