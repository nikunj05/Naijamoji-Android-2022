apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'



android {
//    signingConfigs {
//        config {
//            keyAlias 'NaijaMoji'
//            keyPassword 'NaijaMoji'
//            storeFile file('C:/Work/Android Project/Naijamoji/Naijamoji.jks')
//            storePassword 'NaijaMoji'
//        }
//    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileSdkVersion 32
    defaultConfig {
        applicationId "com.naijamojiapp"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 10
        versionName "1.9"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_static',
                        '-DANDROID_PLATFORM=android-15',
                        '-DANDROID_TOOLCHAIN=clang'
            }
        }
        ndk {
            /*
             * Specifies the ABI configurations of your native
             * libraries Gradle should build and package with your APK.
             */
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
           // signingConfig signingConfigs.config
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
    ndkVersion '21.3.6528147'
    configurations.matching { it.name == '_internal_aapt2_binary' }.all { config ->
        config.resolutionStrategy.eachDependency { details ->
            details.useVersion("3.3.2-5309881")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    androidResources {
        noCompress 'dict'
    }
}

configurations.all() {
    exclude group: "org.apache.httpcomponents", module: "httpclient"
    resolutionStrategy.eachDependency {  details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.0'
            }
        }
    }
}

dependencies {
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation 'junit:junit:4.12'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation 'com.github.bumptech.glide:glide:4.9.0'

    implementation 'jp.wasabeef:glide-transformations:4.0.1'
    // If you want to use the GPU Filters
    kapt 'androidx.annotation:annotation:1.1.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.amitshekhar.android:android-networking:1.0.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.facebook.android:facebook-android-sdk:12.3.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:20.2.0'
    implementation 'com.google.firebase:firebase-core:21.0.0'
    implementation 'com.google.firebase:firebase-auth:21.0.6'
    implementation 'com.patrickpissurno:ripple-effect:1.3.1'
    implementation 'com.google.firebase:firebase-analytics:21.0.0'
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    // Room Database
    implementation "androidx.room:room-runtime:2.4.2"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    // alternatively, just ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    kapt "androidx.room:room-compiler:2.4.2"
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4'
    implementation project(':photoeditor')
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.judemanutd:autostarter:1.0.8'
    implementation 'org.apache.commons:commons-lang3:3.6'
}
apply plugin: 'com.google.gms.google-services'